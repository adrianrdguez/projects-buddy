const express = require('express');
const cors = require('cors');
const { exec } = require('child_process');

const app = express();
const port = 3001;

app.use(cors());
app.use(express.json());

// Endpoint principal: enviar task a Cursor
app.post('/send-to-cursor', async (req, res) => {
  try {
    const { prompt, targetFile, projectName } = req.body;
    
    console.log(`🚀 Enviando task a Cursor...`);
    console.log(`📁 Archivo objetivo: ${targetFile || 'N/A'}`);
    console.log(`📝 Prompt: ${prompt.substring(0, 100)}...`);
    
    // 1. Construir prompt mejorado
    const enhancedPrompt = buildEnhancedPrompt(prompt, targetFile, projectName);
    
    // 2. Abrir Cursor automáticamente
    const platform = process.platform;
    let openCommand = platform === 'darwin' ? 'open -a Cursor' : 
                     platform === 'win32' ? 'start cursor' : 'cursor';
    
    exec(openCommand, (error) => {
      if (error) {
        console.log('⚠️  Cursor no se pudo abrir automáticamente, ábrelo manualmente');
      } else {
        console.log('✅ Cursor abierto');
      }
    });
    
    // 3. Mostrar prompt en consola para copiado manual
    console.log('\n📋 COPIA ESTE PROMPT EN CURSOR:');
    console.log('=====================================');
    console.log(enhancedPrompt);
    console.log('=====================================\n');
    
    res.json({ 
      success: true, 
      message: '✅ Cursor abierto! Revisa la consola y copia el prompt manualmente (Cmd+L para abrir chat)',
      enhancedPrompt 
    });
    
  } catch (error) {
    console.error('❌ Error:', error);
    res.status(500).json({ 
      success: false, 
      error: error.message 
    });
  }
});

function buildEnhancedPrompt(basePrompt, targetFile, projectName) {
  let enhancedPrompt = `# 🎯 Task from AI Planner\n\n`;
  
  if (projectName) {
    enhancedPrompt += `**Project:** ${projectName}\n`;
  }
  
  if (targetFile) {
    enhancedPrompt += `**Target file:** \`${targetFile}\`\n\n`;
  }
  
  enhancedPrompt += `**Instructions:**\n${basePrompt}\n\n`;
  enhancedPrompt += `**Additional requirements:**\n`;
  enhancedPrompt += `- Use TypeScript with proper type definitions\n`;
  enhancedPrompt += `- Include error handling and loading states\n`;
  enhancedPrompt += `- Follow React/Next.js best practices\n`;
  enhancedPrompt += `- Add basic comments for complex logic\n`;
  enhancedPrompt += `- Ensure code is production-ready\n\n`;
  enhancedPrompt += `*Generated by AI Planner - ${new Date().toLocaleTimeString()}*`;
  
  return enhancedPrompt;
}

app.get('/health', (req, res) => {
  res.json({ status: 'ok', message: 'Server running!' });
});

app.listen(port, () => {
  console.log('🚀 Cursor Integration Server (Simple) iniciado!');
  console.log(`📡 Servidor corriendo en http://localhost:${port}`);
  console.log('\n📋 Workflow:');
  console.log('1. Envía request desde el HTML');
  console.log('2. Se abre Cursor automáticamente');
  console.log('3. Copia el prompt de la consola');
  console.log('4. Pega en Cursor con Cmd+L > Cmd+V');
});